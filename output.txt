        GPT-4 and LangChain: Building Python Chatbot with PDF IntegrationWhat is LangChain?Why LangChain?LangChain + GPT-4 + PDFs = ChatBotSetting up the Environmentpython -Vmkdir pdf-chatbotcd pdf-chatbotpython -m venv envenv\scripts\activatesource env/bin/activatepip install langchain openai chromadb pymupdf tiktokenUnderstanding LangChain Data LoadersLangChain PDF Data Loadersimport osfrom langchain.document_loaders import PyMuPDFLoaderos.environ['OPENAI_API_KEY'] = 'ENTER YOUR API KEY'loader = PyMuPDFLoader("./docs/example.pdf")documents = loader.load()from langchain.text_splitter import RecursiveCharacterTextSplittertext_splitter = RecursiveCharacterTextSplitter(chunk_size=512, chunk_overlap=10)texts = text_splitter.split_documents(documents)Leveraging Embeddingsfrom langchain.vectorstores import Chromafrom langchain.embeddings import OpenAIEmbeddingspersist_directory = "./storage"embeddings = OpenAIEmbeddings()vectordb = Chroma.from_documents(documents=texts,                                  embedding=embeddings,                                 persist_directory=persist_directory)vectordb.persist()Chatting with PDF Documentsfrom langchain.chat_models import ChatOpenAIfrom langchain.chains import RetrievalQAretriever = vectordb.as_retriever()llm = ChatOpenAI(model_name='gpt-4')qa = RetrievalQA.from_chain_type(llm=llm, chain_type="stuff", retriever=retriever)while True:        user_input = input("Enter a query: ")        if user_input == "exit":            break        query = f"###Prompt {user_input}"        try:            llm_response = qa(query)            print(llm_response["result"])        except Exception as err:            print('Exception occurred. Please try again', str(err))import os from langchain.document_loaders import PyMuPDFLoaderfrom langchain.text_splitter import RecursiveCharacterTextSplitterfrom langchain.vectorstores import Chromafrom langchain.embeddings import OpenAIEmbeddingsfrom langchain.chat_models import ChatOpenAIfrom langchain.chains import RetrievalQAos.environ["OPENAI_API_KEY"] = 'ENTER YOUR API KEY'persist_directory = "./storage"pdf_path = "./docs/i1040gi.pdf"loader = PyMuPDFLoader(pdf_path)documents = loader.load()text_splitter = RecursiveCharacterTextSplitter(chunk_size=512, chunk_overlap=10)texts = text_splitter.split_documents(documents)embeddings = OpenAIEmbeddings()vectordb = Chroma.from_documents(documents=texts,                                  embedding=embeddings,                                 persist_directory=persist_directory)vectordb.persist()retriever = vectordb.as_retriever(search_kwargs={"k": 3})llm = ChatOpenAI(model_name='gpt-4')qa = RetrievalQA.from_chain_type(llm=llm, chain_type="stuff", retriever=retriever)while True:        user_input = input("Enter a query: ")        if user_input == "exit":            break        query = f"###Prompt {user_input}"        try:            llm_response = qa(query)            print(llm_response["result"])        except Exception as err:            print('Exception occurred. Please try again', str(err))Practical Applications and Use CasesEnter a query: what is this document about?This document is about the legal requirements for the Internal Revenue Service (IRS) to ask for and use information from taxpayers related to their eligibility for benefits or the repayment of loans. It also explains how the IRS may disclose this information to other countries, federal and state agencies, and federal law enforcement and intelligence agencies.Enter a query:Enter a query: By what date is The Marketplace is required to send Form 1095-A?The Marketplace is required to send Form 1095-A by January 31, 2023.Enter a query:ConclusionSubscribe to our newsletter and get exclusive contentRelated PostsShare  SkillsPosted on    CompanyResourcesHow to hire © 2022 Next Idea Tech 